[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "conversations"
description = ''
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Robert Luke", email = "code@robertluke.net" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
  "dominate",
  "toml",
  "soundfile",
  "simple-diarizer",
  "openai",
  "pooch",
  "openai-whisper",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/rob-luke/conversations#readme"
Issues = "https://github.com/rob-luke/conversations/issues"
Source = "https://github.com/rob-luke/conversations"

[tool.hatch.version]
path = "conversations/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "dominate",
  "mkdocs",
  "mkdocstrings[python]",
  "mkdocs-material",
  "toml",
  "soundfile",
  "simple-diarizer",
  "codespell",
  "openai",
  "mypy",
  "pooch",
  "pydocstyle",
  "pytest",
  "pytest-cov",
  "python-semantic-release",
  "openai-whisper",
]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=conversations --cov=tests {args}"
no-cov = "cov --no-cov {args}"
lint = "pydocstyle conversations"
lint-types = "mypy conversations"

[[tool.hatch.envs.test.matrix]]
python = ["310"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "conversations/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.semantic_release]
version_variable = "conversations/__about__.py:__version__"
version_source = "tag"
tag_commit = true
branch = "main"
commit_parser = "semantic_release.history.angular_parser"
build_command="hatch build"
commit_version_number=true
commit_subject="chore: release {version}"

[pydocstyle]
convention = "numpy"

[[tool.mypy.overrides]]
module = [
    "whisper",
    "dominate",
    "scipy.sparse",
    "simple_diarizer"
]
ignore_missing_imports = true

